{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "faf7650b-b733-4c1e-a905-ef2db7ce6d14",
   "metadata": {
    "scrolled": True
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "✅ Model loaded successfully!\n",
      "✅ Feature names loaded successfully!\n",
      " * Serving Flask app '__main__'\n",
      " * Debug mode: on\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\n",
      " * Running on all addresses (0.0.0.0)\n",
      " * Running on http://127.0.0.1:5000\n",
      " * Running on http://172.22.175.107:5000\n",
      "Press CTRL+C to quit\n",
      "127.0.0.1 - - [24/Feb/2025 11:21:36] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 12, 'MonthlyCharges': 70.5, 'TotalCharges': 850.0, 'gender': 'Male', 'Partner': 'Yes', 'Dependents': 'No', 'PhoneService': 'Yes', 'MultipleLines': 'No', 'InternetService': 'Fiber optic', 'OnlineSecurity': 'No', 'OnlineBackup': 'Yes', 'DeviceProtection': 'No', 'TechSupport': 'Yes', 'StreamingTV': 'No', 'StreamingMovies': 'Yes', 'Contract': 'Month-to-month', 'PaperlessBilling': 'Yes', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      12            70.5         850.0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True           0         True           True               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                 True                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                  True   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [1.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:21:48] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:21:48] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '1', 'feature2': '100'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:21:54] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:21:54] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '10', 'feature2': '100'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:21:58] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:21:58] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '100000000000', 'feature2': '100'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:22:08] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:22:08] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '1', 'feature2': '9000'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '1', 'feature2': '9000'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'feature1': '1', 'feature2': '9000'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:22:09] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '1', 'feature2': '9000'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:23:23] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:23] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:23:25] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'feature1': '12', 'feature2': '70.5'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       0               0             0              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0            0              0               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:25:19] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:25:19] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 1, 'tenure': 60, 'MonthlyCharges': 200, 'TotalCharges': 400, 'gender': 'Male', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Month-to-month', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              1      60             200           400              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:31] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:31] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:34] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:35] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"POST /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n",
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:28:36] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 60, 'MonthlyCharges': 30, 'TotalCharges': 1800, 'gender': 'Female', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Two year', 'PaymentMethod': 'Credit card (automatic)'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0      60              30          1800           True   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0            0           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                        0                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0               True                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                   True                               0   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 11:29:17] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 11:29:17] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 1, 'tenure': 2, 'MonthlyCharges': 100, 'TotalCharges': 200, 'gender': 'Male', 'Partner': 'No', 'Dependents': 'No', 'PhoneService': 'No', 'InternetService': 'Fiber optic', 'Contract': 'Month-to-month', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              1       2             100           200              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True        True            0           True               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [1.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 12:26:57] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 12:26:57] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 1, 'tenure': 2, 'MonthlyCharges': 100, 'TotalCharges': 200, 'gender': 'Male', 'Partner': 'No', 'Dependents': 'No', 'PhoneService': 'No', 'InternetService': 'Fiber optic', 'Contract': 'Month-to-month', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              1       2             100           200              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True        True            0           True               0  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [1.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 12:27:15] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 12:27:15] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 8, 'MonthlyCharges': 600, 'TotalCharges': 25000, 'gender': 'Male', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Month-to-month', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       8             600         25000              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [0.]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "127.0.0.1 - - [24/Feb/2025 12:28:07] \"OPTIONS /predict HTTP/1.1\" 200 -\n",
      "127.0.0.1 - - [24/Feb/2025 12:28:07] \"POST /predict HTTP/1.1\" 200 -\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Received Data: {'SeniorCitizen': 0, 'tenure': 2, 'MonthlyCharges': 60, 'TotalCharges': 250, 'gender': 'Male', 'Partner': 'Yes', 'Dependents': 'Yes', 'PhoneService': 'Yes', 'InternetService': 'DSL', 'Contract': 'Month-to-month', 'PaymentMethod': 'Electronic check'}\n",
      "Final DataFrame for Prediction:    SeniorCitizen  tenure  MonthlyCharges  TotalCharges  gender_Female  \\\n",
      "0              0       2              60           250              0   \n",
      "\n",
      "   gender_Male  Partner_No  Partner_Yes  Dependents_No  Dependents_Yes  ...  \\\n",
      "0         True           0         True              0            True  ...   \n",
      "\n",
      "   StreamingMovies_Yes  Contract_Month-to-month  Contract_One year  \\\n",
      "0                    0                     True                  0   \n",
      "\n",
      "   Contract_Two year  PaperlessBilling_No  PaperlessBilling_Yes  \\\n",
      "0                  0                    0                     0   \n",
      "\n",
      "   PaymentMethod_Bank transfer (automatic)  \\\n",
      "0                                        0   \n",
      "\n",
      "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
      "0                                      0                            True   \n",
      "\n",
      "   PaymentMethod_Mailed check  \n",
      "0                           0  \n",
      "\n",
      "[1 rows x 45 columns]\n",
      "Prediction Result: [1.]\n"
     ]
    }
   ],
   "source": [
    "from flask import Flask, request, jsonify\n",
    "from flask_cors import CORS\n",
    "import joblib\n",
    "import pandas as pd\n",
    "import os\n",
    "import json\n",
    "\n",
    "# Initialize Flask app\n",
    "app = Flask(__name__)\n",
    "CORS(app)\n",
    "\n",
    "# Load the trained model\n",
    "MODEL_PATH = \"C:/Users/gadha/OneDrive/Desktop/final project/churn_model.pkl\"\n",
    "FEATURES_PATH = \"C:/Users/gadha/OneDrive/Desktop/final project/feature_names.json\"\n",
    "\n",
    "if os.path.exists(MODEL_PATH) and os.path.exists(FEATURES_PATH):\n",
    "    model = joblib.load(MODEL_PATH)\n",
    "    print(\"✅ Model loaded successfully!\")\n",
    "\n",
    "    # Load feature names separately\n",
    "    with open(FEATURES_PATH, \"r\") as f:\n",
    "        feature_order = json.load(f)\n",
    "        print(\"✅ Feature names loaded successfully!\")\n",
    "\n",
    "else:\n",
    "    print(\"❌ ERROR: Model or feature_names.json file not found!\")\n",
    "    model = None\n",
    "    feature_order = None\n",
    "\n",
    "@app.route('/')\n",
    "def home():\n",
    "    return \"🔥 Churn Prediction API is Running! Use /predict endpoint.\"\n",
    "\n",
    "@app.route('/predict', methods=['POST'])\n",
    "def predict():\n",
    "    if model is None or feature_order is None:\n",
    "        return jsonify({\"error\": \"Model or feature names not loaded correctly.\"})\n",
    "\n",
    "    try:\n",
    "        # Get JSON input\n",
    "        data = request.get_json()\n",
    "        print(\"Received Data:\", data)  # Debugging step\n",
    "\n",
    "        if not data:\n",
    "            return jsonify({\"error\": \"No data received!\"})\n",
    "\n",
    "        # Convert JSON to DataFrame\n",
    "        df = pd.DataFrame([data])\n",
    "\n",
    "        # One-hot encode categorical values\n",
    "        categorical_columns = [\n",
    "            \"gender\", \"Partner\", \"Dependents\", \"PhoneService\", \"MultipleLines\",\n",
    "            \"InternetService\", \"OnlineSecurity\", \"OnlineBackup\", \"DeviceProtection\",\n",
    "            \"TechSupport\", \"StreamingTV\", \"StreamingMovies\", \"Contract\",\n",
    "            \"PaperlessBilling\", \"PaymentMethod\"\n",
    "        ]\n",
    "\n",
    "        df = pd.get_dummies(df)  # Convert categorical columns to one-hot encoding\n",
    "\n",
    "        # Ensure all model features are present (missing ones should be filled with 0)\n",
    "        df = df.reindex(columns=feature_order, fill_value=0)\n",
    "\n",
    "        print(\"Final DataFrame for Prediction:\", df)  # Debugging step\n",
    "\n",
    "        # Make prediction\n",
    "        prediction = model.predict(df)\n",
    "        print(\"Prediction Result:\", prediction)  # Debugging step\n",
    "\n",
    "        # Return response\n",
    "        return jsonify({\"churn_prediction\": int(prediction[0])})\n",
    "\n",
    "    except Exception as e:\n",
    "        print(\"Error:\", str(e))  # Debugging step\n",
    "        return jsonify({\"error\": str(e)})\n",
    "\n",
    "# Run Flask app\n",
    "if __name__ == '__main__':\n",
    "    app.run(host='0.0.0.0', port=5000, debug=True, use_reloader=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": none,
   "id": "1f830925-0a31-4ee4-a14b-d3a6b1f4d57c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
